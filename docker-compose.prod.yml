version: '3.8'

services:
  mysql:
    image: mysql:8.4
    container_name: quit_smoking-mysql-prod
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_password}
      MYSQL_DATABASE: quit_smoking
      MYSQL_USER: ${MYSQL_USER:-quit_smoking}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: quit_smoking-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    image: quit_smoking-backend:latest
    container_name: quit_smoking-api-prod
    ports:
      - "8000:8000"
    volumes:
      - backend_storage:/var/www/html/storage
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      APP_URL: ${APP_URL:-http://localhost:8000}
      APP_KEY: ${APP_KEY}

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_DATABASE: quit_smoking
      DB_USERNAME: ${MYSQL_USER:-quit_smoking}
      DB_PASSWORD: ${MYSQL_PASSWORD:-secure_password}

      BROADCAST_DRIVER: log
      CACHE_STORE: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120

      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379

      SANCTUM_STATEFUL_DOMAINS: ${SANCTUM_STATEFUL_DOMAINS:-localhost:3000}
      SESSION_DOMAIN: ${SESSION_DOMAIN:-localhost}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    image: quit_smoking-frontend:latest
    container_name: quit_smoking-frontend-prod
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000/api}
    depends_on:
      backend:
        condition: service_started
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: quit_smoking-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  mysql_data:
  redis_data:
  backend_storage:

networks:
  app-network:
    driver: bridge
