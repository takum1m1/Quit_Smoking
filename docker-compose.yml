services:
  mysql:
    image: mysql:8.4
    container_name: quit_smoking-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: quit_smoking
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: quit_smoking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    image: quit_smoking-backend
    container_name: quit_smoking-api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost:8000
      APP_KEY: base64:your-app-key-here

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: quit_smoking
      DB_USERNAME: root
      DB_PASSWORD: root

      BROADCAST_DRIVER: log
      CACHE_STORE: database
      QUEUE_CONNECTION: database
      SESSION_DRIVER: database
      SESSION_LIFETIME: 120

      SANCTUM_STATEFUL_DOMAINS: localhost:3000,127.0.0.1:3000,quit_smoking-frontend:3000
      SESSION_DOMAIN: localhost
      SESSION_SECURE_COOKIE: false
      SESSION_HTTP_ONLY: true
      SESSION_SAME_SITE: lax
      FRONTEND_URL: http://localhost:3000
      APP_FRONTEND_URL: http://localhost:3000
    depends_on:
      - mysql

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile.dev
    image: quit_smoking-frontend
    container_name: quit_smoking-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_PUBLIC_API_URL: http://localhost:8000/api
    depends_on:
      backend:
        condition: service_started

volumes:
  mysql_data:
  redis_data:
  backend_storage: